#install 
!pip install yfinance
!pip install bs4
!pip install nbformat
!pip install --upgrade plotly

#import
import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots

import plotly.io as pio
pio.renderers.default = "iframe"

import warnings
# Ignore all warnings
warnings.filterwarnings("ignore", category=FutureWarning)

##Define Graphing Function
def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    stock_data_specific = stock_data[stock_data.Date <= '2021-06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()
    from IPython.display import display, HTML
    fig_html = fig.to_html()
    display(HTML(fig_html))

#Question 1: Use yfinance to Extract Stock Data
#lấy dữ liệu giá của cổ phiêú Tesla mã là TSLA
#Bài làm của Question 1: sử dụng thư viện yfinance
import yfinance as yf
# Download historical data for a stock
tesla = yf.Ticker("TSLA")
tesla_data = tesla.history(period="max")

#reset index
tesla_data.reset_index(inplace = True)

# Display the downloaded data
tesla_data.head()


#Question 3: Use yfinance to Extract Stock Data
#lấy bảng giá cổ phiếu mã GME
import yfinance as yf
gme = yf.Ticker("GME")
gme_data = gme.history(period = "max")
gme_data.reset_index(inplace = True)
gme_data.head()


#Question 2: Use Webscraping to Extract Tesla Revenue Data
url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
html_data = requests.get(url).text
soup = BeautifulSoup(html_data, "html.parser")
#find all html tables in the web page
tables = soup.find_all('table') # in html table is represented by the tag <table>
#Tìm số thứ tự bảng có tên là Tesla Quarterly Revenue trong webpage
for index,table in enumerate(tables):
    if ("Tesla Quarterly Revenue" in str(table)):
        table_index = index
print(table_index) #output: 1

#Lấy ds các df trong html
df_list = pd.read_html(url, flavor='bs4')
#gán giá trị
tesla_revenue = df_list[1]
tesla_revenue.columns = ['Date','Revenue']
# Chuyển đổi cột sang chuỗi (nếu cần)
tesla_revenue['Revenue'] = tesla_revenue['Revenue'].astype(str)
# Thay thế các ký tự không mong muốn
tesla_revenue["Revenue"] = tesla_revenue['Revenue'].str.replace(',|\$', "", regex=True)
# Chuyển đổi sang kiểu số (float hoặc int)
tesla_revenue['Revenue'] = tesla_revenue['Revenue'].astype(float)
# Xoá các cột thừa
tesla_revenue.dropna(inplace=True)
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]
#check data
tesla_revenue.tail()


#Question 4: Use Webscraping to Extract GME Revenue Data
link = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html"
html_data_2 = requests.get(link).text
soup1 = BeautifulSoup(html_data_2, "html.parser")
#find all html tables in the web page
tables1 = soup1.find_all('table') # in html table is represented by the tag <table>
#Tìm số thứ tự bảng có tên là Tesla Quarterly Revenue trong webpage
for index,table in enumerate(tables1):
    if ("GameStop Quarterly Revenue" in str(table)):
        table_index = index
print(table_index) #output:1

df_list2 = pd.read_html(link, flavor='bs4')
gme_revenue = df_list2[1]
gme_revenue.columns = ['Date','Revenue']
# Chuyển đổi cột sang chuỗi (nếu cần)
gme_revenue['Revenue'] = gme_revenue['Revenue'].astype(str)
# Thay thế các ký tự không mong muốn
gme_revenue["Revenue"] = gme_revenue['Revenue'].str.replace(',|\$', "", regex=True)
# Chuyển đổi sang kiểu số (float hoặc int)
gme_revenue['Revenue'] = gme_revenue['Revenue'].astype(float)
#Xoá cột thừa
gme_revenue.dropna(inplace=True)
gme_revenue = gme_revenue[gme_revenue['Revenue'] != ""]
#check data
gme_revenue.tail()


#Question 5: Plot Tesla Stock Graph
make_graph(tesla_data, tesla_revenue, 'Tesla')

#Question 6: Plot GameStop Stock Graph
make_graph(gme_data, gme_revenue, 'GameStop')
